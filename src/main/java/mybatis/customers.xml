<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "mybatis-3-mapper.dtd">

<!--
	이 파일의 이름은 SQL 매퍼입ㄴ디ㅏ. 실행할 sql만 모아놓은 파일입니다.
	1) dml(insert, update, delete, select)과 동일한 태그에 작성하기
	2) dao 메소드에서 지정했던 메소드의 인자, 리턴타입 정하기
	**주의 : 자바 객체의 변수(속성)명과 파라미터(기호 #{} 안에 입력) 이름을 동일하게 해야합니다.
				파라미터가 MAP일때는 key 이름과 파라미터(#{}) 이름 동일하게 해야합니다.
				기본 형식, String은 변수 선언 키워드와 동일하게 합니다.
-->
<mapper namespace="tblcustomer">
	<!-- 리턴타입이 List일 때에는 제너릭타입만 설정하면 됩니다. -->
	<select id="selectAll" resultType="CustomerDto">
		SELECT * FROM TBL_CUSTOM
	</select>
	<select id="selectById" parameterType="String" resultType="CustomerDto">
		SELECT * FROM TBL_CUSTOM WHERE CUSTOM_ID = #{custom_id}
	</select>
	<select id="selectByNameAndAge" parameterType="CustomerDto" resultType="CustomerDto">
		SELECT * FROM TBL_CUSTOM WHERE name = #{name} and age = #{age}
	</select>
	<!-- insert, update, delete는 리턴 타입 지정 안합니다. (그래도 값은 리턴해줍니다.) -->
	<insert id="join" parameterType="CustomerDto">
		Insert into tbl_custom (custom_id, name, email, age, reg_date) values (#{custom_id},#{name},#{email},#{age}, sysdate)
	</insert>
	<update id="modify" parameterType="CustomerDto">
		UPDATE TBL_CUSTOM SET name = #{name}, EMAIL = #{email}, age = #{age} WHERE CUSTOM_ID = #{custom_id}
	</update>
	<delete id="delete" parameterType="String">
		DELETE FROM TBL_CUSTOM WHERE CUSTOM_ID = #{custom_id}
	</delete>
</mapper>