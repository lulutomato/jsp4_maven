<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace ="tblproduct">

 	<!--동적커리 예시 : 상품 조회에 필요한 검색 필터. 아래 4개 중 하나의 쿼리로 실행되게 할 수 있습니다.
 					 동적쿼리를 위해서 where ,if, trim 마이바티스 태그 사용합니다.
 	 -->
 	<!--select * from TBL_PRODUCT 
 	where category = 'B2' and pname like '%'||'사과'||'%' => 파라미터 2개 모두 있을 때
 					또는 
 	select *from TBL_PRODUCT where category = 'B2'; => keyword 파라미터가 없을 때
 					또는
 	select * from TBL_PRODUCT where pname like = '$'||'사과'||'%'=> category 파라미터가 없을 때
 					또는
 	select *from TBL_PRODUCT => 파라미터 2개 모두 없을 때 
 	-->
 <select id="search" resultType = "ProductDto" parameterType="java.util.Map">
 	select * from tbl_product
 	<!--if 중 하나라도 조건식이 만들어 질 때만 where 작성. 아래 if의 test 값은 조건식 입니다.-->
 	
 	<where>
 	<!--category 파라미터 값이 null이 아닐때.  -->
 	<if test= "category!=null">
 	category = #{category}
 	<!--앞의 조건식 없으면 and 는 trim -->
    </if>
 	
 	<!-- keyword 파라미터값이 null 이 아닐때.  -->
 	<if test = "keyword!=null">
 	<trim prefix = "and"> <!-- 이 위치에 and 문자열을 출력.  -->
 	pname like '%' || #{keyword} || '%' 	
 	
 	</trim>
 	</if>
 	 	<!-- test 논리연산: and,or   -->
 	<if test = "from !=null and to!=null">
 	<trim prefix = "and">
 	price between #{from} and #{to} 
 	</trim>
 	</if>
 	</where>
	<if test= "column!=null">
 	order by ${column}  <!--$는 양쪽에 ""안붙음 #은 ""붙음 (보통) -->
	</if>
 </select>
 <!--카테고리 가져오기  -->
 <select id="getCategories" resultType = "day4.mybatis.dto.CateDto">
 <!-- select distinct category from tbl_product order by category--> 
 select*from tbl_category order by code
 </select>
 
<insert id ="insert" parameterType="ProductDto" >
	insert into tbl_product(pcode,category,pname,price)
    				values(#{pcode},#{category},#{pname},#{price})
</insert>
<select id ="selectByCategory" parameterType="String" resultType="ProductDto">
SELECT * FROM TBL_PRODUCT WHERE CATEGORY = #{category} ORDER BY PNAME 
</select>

<select id ="selectByPname" parameterType="String" resultType="ProductDto">
SELECT * FROM TBL_PRODUCT WHERE PNAME LIKE '%' || #{pname} || '%' ORDER BY CATEGORY
</select>



<select id= "selectAll" resultType="ProductDto">
 SELECT * FROM TBL_PRODUCT ORDER BY PCODE DESC
</select>

<delete id= "delete" parameterType="String" >
 delete from tbl_product where pname = #{pname}
</delete>

</mapper>